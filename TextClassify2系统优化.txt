一个简单的例子：
	问题：高中数学讲过一次函数y=Ax+b，需要我们判别一个点(m,n)是否在这条直线上。
	解析：已知两点确定一条直线。所以需要给我们来两个点的坐标，让我们联立求得参数A和b，才能求得具体的函数表达式。
		进而我们可以选择代入的方法，判别(m,n)是否在这条直线上。
	类比：模式识别中的分类器，就是这样的“函数”，确切的是“分段函数”。
		如果需要我们判别一个文本text是否属于某个类，需要我们首先提供一些已知的文本，来联立求得分类器的参数，才能求得具体的分类器的表达式。
		进而我们可以判别text是否属于相应的类别，这就是文本分类器的工作原理。

系统精度的优化
	类别确定：分类维度和各个维度下的类别名称，类别与类别之间无交集
	训练集的准备：
		训练资讯的数量：总体数量，每一类别下的数量
		训练资讯的质量：长度越长越好，代表性
	分词的优化：语言的分词模块优化，中文jieba分词，英文nltk分词
		中文：jieba词典的优化，可以修改
	*特征词典：特征词典的维度+停用词的筛选(特征词黑名单)+专业词(特征词白名单)+单词表的前N项过滤+中英文特征词的长度筛选
	特征提取(基于特征词典)：bool特征，tf特征，tf-idf特征
	关键词提取(基于特征词典)：tf特征
	分类器的选取：MultinomialNB LinearSVC DecisionTreeClassifier RandomForestClassifier
	分类器的整合：
		平局值法：平均值四舍五入
		投票法：票数相同取前者
	
系统速度的优化
	训练集临时文件的生成，采用json格式保存和读取
	